{"version":3,"sources":["redux/actions/todoActions.js","redux/constants/constants.js","components/Todos/TodoItem.js","components/Todos/TodoEmptyState.js","components/Todos/Todos.js","components/Todos/AddTodo.js","components/Todos/FilterTodos.js","components/App.js","redux/store/initialState.js","redux/reducers/todoFilterReducer.js","redux/reducers/index.js","redux/reducers/todoReducer.js","index.js","redux/store/index.js"],"names":["nextTodoId","updateTodo","id","content","type","payload","deleteTodo","toggleDoneTodo","filterTodos","filter","TodoItem","todoItem","onItemDelete","onUpdateTodo","onItemToggleComplete","title","placement","checked","completed","onChange","primary","multiline","value","event","target","handleTextChange","onClick","aria-label","styles","container","display","flexDirection","alignItems","justifyContent","height","color","fontFamily","fontSize","fontWeight","margin","subtitle","TodoEmptyState","activeFilter","style","renderMessage","Todos","this","props","todos","todosFilter","renderTodoItem","map","todo","key","length","renderTodos","Component","setFilterTodos","t","connect","dispatch","bindActionCreators","input","autoComplete","onSubmit","e","preventDefault","trim","inputRef","node","placeholder","fullWidth","variant","autoFocus","spellCheck","InputLabelProps","shrink","float","marginTop","size","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","handleChange","state","aria-owns","undefined","aria-haspopup","currentTarget","split","join","onClose","maxWidth","App","spacing","item","xs","todoFilterReducer","initalState","action","rootReducer","combineReducers","todosFilterReducer","store","createStore","initialState","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.befb1474.chunk.js","sourcesContent":["//import action types constants\nimport {\n\tADD_TODO,\n\tUPDATE_TODO,\n\tDELETE_TODO,\n\tTOGGLE_DONE_TODO,\n\tSET_FILTER_TODOS\n} from '../constants/constants';\n\n//addTodo action creator\nlet nextTodoId = 0;\nexport const addTodo = content => {\n\treturn {\n\t\ttype: ADD_TODO,\n\t\tpayload: {\n\t\t\tcontent,\n\t\t\tid: nextTodoId++\n\t\t}\n\t};\n};\n\n//updateTodo action creator\nexport const updateTodo = (id, content) => {\n\treturn {\n\t\ttype: UPDATE_TODO,\n\t\tpayload: {\n\t\t\tid,\n\t\t\tcontent\n\t\t}\n\t};\n};\n\n//deleteTodo action creator\nexport const deleteTodo = id => {\n\treturn {\n\t\ttype: DELETE_TODO,\n\t\tpayload: {\n\t\t\tid\n\t\t}\n\t};\n};\n\n//completedTodo action creator\nexport const toggleDoneTodo = id => {\n\treturn {\n\t\ttype: TOGGLE_DONE_TODO,\n\t\tpayload: {\n\t\t\tid\n\t\t}\n\t};\n};\n\n//filterTodos\nexport const filterTodos = filter => {\n\treturn {\n\t\ttype: SET_FILTER_TODOS,\n\t\tfilter\n\t};\n};\n","export const ADD_TODO = 'ADD_TODO';\nexport const UPDATE_TODO = 'UPDATE_TODO';\nexport const DELETE_TODO = 'DELETE_TODO';\nexport const TOGGLE_DONE_TODO = 'TOGGLE_DONE_TODO';\nexport const SET_FILTER_TODOS = 'SET_FILTER_TODOS';\nexport const SHOW_ALL_TODOS = 'SHOW_ALL';\nexport const SHOW_ACTIVE_TODOS = 'SHOW_ACTIVE';\nexport const SHOW_COMPLETED_TODOS = 'SHOW_COMPLETED';\n","import React, { Fragment } from 'react';\n\n//material-ui components\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Divider from '@material-ui/core/Divider';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport InputBase from '@material-ui/core/InputBase';\n\n//receive Redux state via props, we invoke actions via props\nconst TodoItem = ({\n\ttodoItem,\n\tonItemDelete,\n\tonUpdateTodo,\n\tonItemToggleComplete\n}) => {\n\tconst handleTextChange = event => {\n\t\tonUpdateTodo(todoItem.id, event.target.value);\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<ListItem>\n\t\t\t\t<Tooltip title=\"Completed\" placement=\"right\">\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tchecked={todoItem.completed}\n\t\t\t\t\t\tonChange={() => onItemToggleComplete(todoItem.id)}\n\t\t\t\t\t/>\n\t\t\t\t</Tooltip>\n\n\t\t\t\t<ListItemText\n\t\t\t\t\tprimary={\n\t\t\t\t\t\t<InputBase\n\t\t\t\t\t\t\tmultiline={true}\n\t\t\t\t\t\t\tvalue={todoItem.content}\n\t\t\t\t\t\t\tonChange={event => handleTextChange(event)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t/>\n\n\t\t\t\t<ListItemSecondaryAction\n\t\t\t\t\tonClick={() => onItemDelete(todoItem.id)}>\n\t\t\t\t\t<Tooltip title=\"Delete\" placement=\"right\">\n\t\t\t\t\t\t<IconButton aria-label=\"delete todo\">\n\t\t\t\t\t\t\t<DeleteOutline />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</ListItemSecondaryAction>\n\t\t\t</ListItem>\n\n\t\t\t<Divider />\n\t\t</Fragment>\n\t);\n};\n\nexport default TodoItem;\n","import React, { Fragment } from 'react';\nimport {\n\tSHOW_ALL_TODOS,\n\tSHOW_COMPLETED_TODOS,\n\tSHOW_ACTIVE_TODOS\n} from '../../redux/constants/constants';\n\nconst styles = {\n\tcontainer: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\theight: '150px',\n\t\tcolor: '#313777',\n\t\tfontFamily: 'Montserrat, sans-serif'\n\t},\n\ttitle: {\n\t\tfontSize: '24px',\n\t\tfontWeight: 'bold',\n\t\tmargin: '15px 0 5px'\n\t},\n\tsubtitle: {\n\t\tfontSize: '16px',\n\t\tmargin: '5px 0'\n\t}\n};\n\n//receive redux activeFilter and show correct message\nconst TodoEmptyState = ({ activeFilter }) => {\n\tconst renderMessage = () => {\n\t\tswitch (activeFilter) {\n\t\t\tcase SHOW_COMPLETED_TODOS:\n\t\t\t\treturn (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<h2 style={styles.title}>Been busy?</h2>\n\t\t\t\t\t\t<p style={styles.subtitle}>\n\t\t\t\t\t\t\tYou haven't completed any tasks recently.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</Fragment>\n\t\t\t\t);\n\t\t\tcase SHOW_ACTIVE_TODOS:\n\t\t\t\treturn (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<h2 style={styles.title}>Cheers!</h2>\n\t\t\t\t\t\t<p style={styles.subtitle}>\n\t\t\t\t\t\t\tLooks like you're caught up with your tasks.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</Fragment>\n\t\t\t\t);\n\t\t\tdefault:\n\t\t\t\treturn (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<h2 style={styles.title}>All clear</h2>\n\t\t\t\t\t\t<p style={styles.subtitle}>\n\t\t\t\t\t\t\tLooks like everything's done.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</Fragment>\n\t\t\t\t);\n\t\t}\n\t};\n\n\treturn <span style={styles.container}>{renderMessage()}</span>;\n};\n\nexport default TodoEmptyState;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\n//constants\nimport {\n\tSHOW_ALL_TODOS,\n\tSHOW_COMPLETED_TODOS,\n\tSHOW_ACTIVE_TODOS\n} from '../../redux/constants/constants';\n\n//action creators\nimport {\n\tupdateTodo,\n\tdeleteTodo,\n\ttoggleDoneTodo\n} from '../../redux/actions/todoActions';\n\n//material-ui components\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\n\n//our components\nimport TodoItem from './TodoItem';\nimport TodoEmptyState from './TodoEmptyState';\n\nclass Todos extends Component {\n\t//render TodoItems\n\trenderTodos() {\n\t\tconst {\n\t\t\ttodos,\n\t\t\tdeleteTodo,\n\t\t\tupdateTodo,\n\t\t\ttoggleDoneTodo,\n\t\t\ttodosFilter\n\t\t} = this.props;\n\t\tconst renderTodoItem = todos.map(todo => {\n\t\t\treturn (\n\t\t\t\t<TodoItem\n\t\t\t\t\tkey={todo.id}\n\t\t\t\t\ttodoItem={todo}\n\t\t\t\t\tonItemDelete={id => deleteTodo(id)}\n\t\t\t\t\tonUpdateTodo={(id, content) => updateTodo(id, content)}\n\t\t\t\t\tonItemToggleComplete={id => toggleDoneTodo(id)}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<List>\n\t\t\t\t{todos.length > 0 && <Divider />}\n\t\t\t\t{!todos.length && <TodoEmptyState activeFilter={todosFilter} />}\n\t\t\t\t{renderTodoItem}\n\t\t\t</List>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn this.renderTodos();\n\t}\n}\n\n//filter todos\nconst setFilterTodos = (todos, filter) => {\n\tswitch (filter) {\n\t\tcase SHOW_ALL_TODOS:\n\t\t\treturn todos;\n\t\tcase SHOW_COMPLETED_TODOS:\n\t\t\treturn todos.filter(t => t.completed);\n\t\tcase SHOW_ACTIVE_TODOS:\n\t\t\treturn todos.filter(t => !t.completed);\n\t\tdefault:\n\t\t\treturn todos;\n\t}\n};\n\n//return action creators\nfunction mapDispatchToProps(dispatch) {\n\treturn bindActionCreators(\n\t\t{\n\t\t\tdeleteTodo,\n\t\t\tupdateTodo,\n\t\t\ttoggleDoneTodo\n\t\t},\n\t\tdispatch\n\t);\n}\n\n//return data our component needs\nfunction mapStateToProps({ todos, todosFilter }) {\n\treturn {\n\t\ttodos: setFilterTodos(todos, todosFilter),\n\t\ttodosFilter\n\t};\n}\n\n//export TodoComponent\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\n//action creator\nimport { addTodo } from '../../redux/actions/todoActions';\n\n//material-ui components\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\n//passing dispatch directly\nconst AddTodo = ({ dispatch }) => {\n\tlet input;\n\n\treturn (\n\t\t<form\n\t\t\tautoComplete=\"off\"\n\t\t\tonSubmit={e => {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (!input.value.trim()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tdispatch(addTodo(input.value));\n\t\t\t\tinput.value = '';\n\t\t\t\tinput.style.height = 'auto';\n\t\t\t}}>\n\t\t\t<TextField\n\t\t\t\tid=\"addTask\"\n\t\t\t\tinputRef={node => (input = node)}\n\t\t\t\tplaceholder=\"Empty task\"\n\t\t\t\tfullWidth\n\t\t\t\tmargin=\"normal\"\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tautoFocus={true}\n\t\t\t\tmultiline={true}\n\t\t\t\tspellCheck=\"false\"\n\t\t\t\tInputLabelProps={{\n\t\t\t\t\tshrink: true\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<Button\n\t\t\t\tstyle={{ float: 'right', marginTop: '8px' }}\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tsize=\"medium\"\n\t\t\t\tcolor=\"primary\"\n\t\t\t\ttype=\"submit\">\n\t\t\t\tAdd Task\n\t\t\t</Button>\n\t\t</form>\n\t);\n};\n\nexport default connect()(AddTodo);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\n//constants\nimport {\n\tSHOW_ALL_TODOS,\n\tSHOW_COMPLETED_TODOS,\n\tSHOW_ACTIVE_TODOS\n} from '../../redux/constants/constants';\n\n//action creator\nimport { filterTodos } from '../../redux/actions/todoActions';\n\n//material-ui components\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst FilterTodos = props => {\n\t//material-ui menu\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\n\tconst open = Boolean(anchorEl);\n\n\t//material-ui event handler\n\tfunction handleClick(event) {\n\t\tsetAnchorEl(event.currentTarget);\n\t}\n\n\t//material-ui close menu\n\tfunction handleClose() {\n\t\tsetAnchorEl(null);\n\t}\n\n\t//dispatch filter action and close menu\n\tfunction handleChange(state) {\n\t\tprops.filterTodos(state);\n\t\thandleClose();\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Button\n\t\t\t\taria-owns={open ? 'fade-menu' : undefined}\n\t\t\t\taria-haspopup=\"true\"\n\t\t\t\tsize=\"small\"\n\t\t\t\tonClick={handleClick}>\n\t\t\t\t{props.todosFilter.split('_').join(' ')}\n\t\t\t</Button>\n\t\t\t<Menu\n\t\t\t\tid=\"fade-menu\"\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\topen={open}\n\t\t\t\tonClose={handleClose}>\n\t\t\t\t<MenuItem onClick={() => handleChange(SHOW_ALL_TODOS)}>\n\t\t\t\t\tAll\n\t\t\t\t</MenuItem>\n\t\t\t\t<MenuItem onClick={() => handleChange(SHOW_ACTIVE_TODOS)}>\n\t\t\t\t\tActive\n\t\t\t\t</MenuItem>\n\t\t\t\t<MenuItem onClick={() => handleChange(SHOW_COMPLETED_TODOS)}>\n\t\t\t\t\tCompleted\n\t\t\t\t</MenuItem>\n\t\t\t</Menu>\n\t\t</div>\n\t);\n};\n\n//return action creators\nfunction mapDispatchToProps(dispatch) {\n\treturn bindActionCreators(\n\t\t{\n\t\t\tfilterTodos\n\t\t},\n\t\tdispatch\n\t);\n}\n\n//return data our component needs\nfunction mapStateToProps({ todosFilter }) {\n\treturn {\n\t\ttodosFilter\n\t};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterTodos);\n","import React from 'react';\nimport Todos from './Todos/Todos';\nimport AddTodo from './Todos/AddTodo';\nimport FilterTodos from './Todos/FilterTodos';\n\n//material-ui grid\nimport Grid from '@material-ui/core/Grid';\n\nconst styles = {\n\tcontainer: {\n\t\tmaxWidth: 500,\n\t\tmargin: `50px auto`\n\t}\n};\n\nconst App = () => {\n\treturn (\n\t\t<div style={styles.container}>\n\t\t\t<Grid container spacing={24}>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<FilterTodos />\n\t\t\t\t\t<AddTodo />\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<Todos />\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import { SHOW_ALL_TODOS } from '../constants/constants';\n\nexport default {\n\ttodos: [],\n\ttodosFilter: SHOW_ALL_TODOS\n};\n","import { SET_FILTER_TODOS } from '../constants/constants';\nimport initalState from '../store/initialState';\n\nconst todoFilterReducer = (state = initalState.todosFilter, action) => {\n\tswitch (action.type) {\n\t\tcase SET_FILTER_TODOS:\n\t\t\treturn action.filter;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default todoFilterReducer;\n","import { combineReducers } from 'redux';\nimport todosReducer from './todoReducer';\nimport todosFilterReducer from './todoFilterReducer';\n\n//key names will used on our components\nconst rootReducer = combineReducers({\n\ttodos: todosReducer,\n\ttodosFilter: todosFilterReducer\n});\n\nexport default rootReducer;\n","// constant types\nimport {\n\tADD_TODO,\n\tUPDATE_TODO,\n\tDELETE_TODO,\n\tTOGGLE_DONE_TODO\n} from '../constants/constants';\n\n// initial state\nimport initalState from '../store/initialState';\n\n// todoReducer\nexport default function(state = initalState.todos, action) {\n\t// deconstructing action object\n\tconst { payload } = action;\n\n\t// checking action type\n\tswitch (action.type) {\n\t\t// add_todo reducer\n\t\tcase ADD_TODO:\n\t\t\treturn [\n\t\t\t\t...state,\n\t\t\t\t{\n\t\t\t\t\tid: payload.id,\n\t\t\t\t\tcompleted: false,\n\t\t\t\t\tcontent: payload.content\n\t\t\t\t}\n\t\t\t];\n\n\t\t// update_todo reducer\n\t\tcase UPDATE_TODO:\n\t\t\treturn state.map(todo => {\n\t\t\t\treturn todo.id === action.payload.id\n\t\t\t\t\t? { ...todo, content: payload.content }\n\t\t\t\t\t: todo;\n\t\t\t});\n\n\t\t// delete_todo reducer\n\t\tcase DELETE_TODO:\n\t\t\treturn state.filter(todo => todo.id !== payload.id);\n\n\t\t// toggle_todo reducer\n\t\tcase TOGGLE_DONE_TODO:\n\t\t\treturn state.map(todo => {\n\t\t\t\treturn todo.id === payload.id\n\t\t\t\t\t? { ...todo, completed: !todo.completed }\n\t\t\t\t\t: todo;\n\t\t\t});\n\n\t\t// default state\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport configureStore from './redux/store';\n\nconst store = configureStore();\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n","import { createStore } from 'redux';\nimport rootReducer from '../reducers';\nimport initialState from './initialState';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nexport default () => {\n\treturn createStore(rootReducer, initialState, composeWithDevTools());\n};\n"],"sourceRoot":""}