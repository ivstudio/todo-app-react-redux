{"version":3,"sources":["redux/actions/todoActions.js","redux/constants/constants.js","components/Todos/todoItem.js","components/Todos/todoEmptyState.js","components/Todos/todos.js","components/Todos/addTodo.js","components/Todos/filterTodos.js","components/App.js","redux/store/initialState.js","redux/reducers/todoFilterReducer.js","redux/reducers/index.js","redux/reducers/todoReducer.js","index.js","redux/store/index.js"],"names":["nextTodoId","updateTodo","id","content","type","payload","deleteTodo","toggleDoneTodo","filterTodos","filter","TodoItem","_ref","todoItem","onItemDelete","onUpdateTodo","onItemToggleComplete","react_default","a","createElement","react","ListItem_default","Tooltip_default","title","placement","Checkbox_default","checked","completed","onChange","ListItemText_default","primary","InputBase_default","multiline","value","event","target","handleTextChange","ListItemSecondaryAction_default","onClick","IconButton_default","aria-label","DeleteOutline_default","Divider_default","styles","container","display","flexDirection","alignItems","justifyContent","height","color","fontFamily","fontSize","fontWeight","margin","subtitle","TodoEmptyState","activeFilter","style","renderMessage","Todos","_this$props","this","props","todos","todosFilter","renderTodoItem","map","todo","Todos_todoItem","key","List_default","length","todoEmptyState","renderTodos","Component","setFilterTodos","t","connect","dispatch","bindActionCreators","input","autoComplete","onSubmit","e","preventDefault","trim","TextField_default","inputRef","node","placeholder","fullWidth","variant","autoFocus","spellCheck","InputLabelProps","shrink","Button_default","float","marginTop","size","_React$useState","React","useState","_React$useState2","Object","slicedToArray","anchorEl","setAnchorEl","open","Boolean","handleClose","handleChange","state","aria-owns","undefined","aria-haspopup","currentTarget","split","join","Menu_default","onClose","MenuItem_default","maxWidth","App","Grid_default","spacing","item","xs","Todos_filterTodos","Todos_addTodo","Todos_todos","initialState","todoFilterReducer","arguments","initalState","action","rootReducer","combineReducers","concat","toConsumableArray","objectSpread","todosFilterReducer","store","createStore","composeWithDevTools","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.bfe8013d.chunk.js","sourcesContent":["//import action types constants\nimport {\n  ADD_TODO,\n  UPDATE_TODO,\n  DELETE_TODO,\n  TOGGLE_DONE_TODO,\n  SET_FILTER_TODOS\n} from \"../constants/constants\";\n\n//addTodo action creator\nlet nextTodoId = 0;\nexport const addTodo = content => {\n  return {\n    type: ADD_TODO,\n    payload: {\n      content,\n      id: nextTodoId++\n    }\n  };\n};\n\n//updateTodo action creator\nexport const updateTodo = (id, content) => {\n  return {\n    type: UPDATE_TODO,\n    payload: {\n      id,\n      content\n    }\n  };\n};\n\n//deleteTodo action creator\nexport const deleteTodo = id => {\n  return {\n    type: DELETE_TODO,\n    payload: {\n      id\n    }\n  };\n};\n\n//completedTodo action creator\nexport const toggleDoneTodo = id => {\n  return {\n    type: TOGGLE_DONE_TODO,\n    payload: {\n      id\n    }\n  };\n};\n\n//filterTodos\nexport const filterTodos = filter => {\n  return {\n    type: SET_FILTER_TODOS,\n    filter\n  };\n};\n","export const ADD_TODO = \"ADD_TODO\";\nexport const UPDATE_TODO = \"UPDATE_TODO\";\nexport const DELETE_TODO = \"DELETE_TODO\";\nexport const TOGGLE_DONE_TODO = \"TOGGLE_DONE_TODO\";\nexport const SET_FILTER_TODOS = \"SET_FILTER_TODOS\";\nexport const SHOW_ALL_TODOS = \"SHOW_ALL\";\nexport const SHOW_ACTIVE_TODOS = \"SHOW_ACTIVE\";\nexport const SHOW_COMPLETED_TODOS = \"SHOW_COMPLETED\";\n","import React, { Fragment } from \"react\";\n\n//material-ui components\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport InputBase from \"@material-ui/core/InputBase\";\n\n//receive Redux state via props, we invoke actions via props\nconst TodoItem = ({\n  todoItem,\n  onItemDelete,\n  onUpdateTodo,\n  onItemToggleComplete\n}) => {\n  const handleTextChange = event => {\n    onUpdateTodo(todoItem.id, event.target.value);\n  };\n\n  return (\n    <Fragment>\n      <ListItem>\n        <Tooltip title=\"Completed\" placement=\"right\">\n          <Checkbox\n            checked={todoItem.completed}\n            onChange={() => onItemToggleComplete(todoItem.id)}\n          />\n        </Tooltip>\n\n        <ListItemText\n          primary={\n            <InputBase\n              multiline={true}\n              value={todoItem.content}\n              onChange={event => handleTextChange(event)}\n            />\n          }\n        />\n\n        <ListItemSecondaryAction onClick={() => onItemDelete(todoItem.id)}>\n          <Tooltip title=\"Delete\" placement=\"right\">\n            <IconButton aria-label=\"delete todo\">\n              <DeleteOutline />\n            </IconButton>\n          </Tooltip>\n        </ListItemSecondaryAction>\n      </ListItem>\n\n      <Divider />\n    </Fragment>\n  );\n};\n\nexport default TodoItem;\n","import React, { Fragment } from \"react\";\nimport {\n  SHOW_ALL_TODOS,\n  SHOW_COMPLETED_TODOS,\n  SHOW_ACTIVE_TODOS\n} from \"../../redux/constants/constants\";\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"150px\",\n    color: \"#313777\",\n    fontFamily: \"Montserrat, sans-serif\"\n  },\n  title: {\n    fontSize: \"24px\",\n    fontWeight: \"bold\",\n    margin: \"15px 0 5px\"\n  },\n  subtitle: {\n    fontSize: \"16px\",\n    margin: \"5px 0\"\n  }\n};\n\n//receive redux activeFilter and show correct message\nconst TodoEmptyState = ({ activeFilter }) => {\n  const renderMessage = () => {\n    switch (activeFilter) {\n      case SHOW_ALL_TODOS:\n        return (\n          <Fragment>\n            <h2 style={styles.title}>All clear</h2>\n            <p style={styles.subtitle}>Looks like everything's done.</p>\n          </Fragment>\n        );\n      case SHOW_COMPLETED_TODOS:\n        return (\n          <Fragment>\n            <h2 style={styles.title}>Been busy?</h2>\n            <p style={styles.subtitle}>\n              You haven't completed any tasks recently.\n            </p>\n          </Fragment>\n        );\n      case SHOW_ACTIVE_TODOS:\n        return (\n          <Fragment>\n            <h2 style={styles.title}>Cheers!</h2>\n            <p style={styles.subtitle}>\n              Looks like you're caught up with your tasks.\n            </p>\n          </Fragment>\n        );\n    }\n  };\n\n  return <span style={styles.container}>{renderMessage()}</span>;\n};\n\nexport default TodoEmptyState;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\n//constants\nimport {\n  SHOW_ALL_TODOS,\n  SHOW_COMPLETED_TODOS,\n  SHOW_ACTIVE_TODOS\n} from \"../../redux/constants/constants\";\n\n//action creators\nimport {\n  updateTodo,\n  deleteTodo,\n  toggleDoneTodo\n} from \"../../redux/actions/todoActions\";\n\n//material-ui components\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\n\n//our components\nimport TodoItem from \"./todoItem\";\nimport TodoEmptyState from \"./todoEmptyState\";\n\nclass Todos extends Component {\n  //render TodoItems\n  renderTodos() {\n    const {\n      todos,\n      deleteTodo,\n      updateTodo,\n      toggleDoneTodo,\n      todosFilter\n    } = this.props;\n    const renderTodoItem = todos.map(todo => {\n      return (\n        <TodoItem\n          key={todo.id}\n          todoItem={todo}\n          onItemDelete={id => deleteTodo(id)}\n          onUpdateTodo={(id, content) => updateTodo(id, content)}\n          onItemToggleComplete={id => toggleDoneTodo(id)}\n        />\n      );\n    });\n\n    return (\n      <List>\n        {todos.length > 0 && <Divider />}\n        {!todos.length && <TodoEmptyState activeFilter={todosFilter}/>}\n        {renderTodoItem}\n      </List>\n    );\n  }\n\n  render() {\n    return this.renderTodos();\n  }\n}\n\n//filter todos\nconst setFilterTodos = (todos, filter) => {\n  switch (filter) {\n    case SHOW_ALL_TODOS:\n      return todos;\n    case SHOW_COMPLETED_TODOS:\n      return todos.filter(t => t.completed);\n    case SHOW_ACTIVE_TODOS:\n      return todos.filter(t => !t.completed);\n    default:\n      return todos;\n  }\n};\n\n//return action creators\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      deleteTodo,\n      updateTodo,\n      toggleDoneTodo\n    },\n    dispatch\n  );\n}\n\n//return data our component needs\nfunction mapStateToProps({ todos, todosFilter }) {\n  return {\n    todos: setFilterTodos(todos, todosFilter),\n    todosFilter\n  };\n}\n\n//export TodoComponent\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Todos);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\n//action creator\nimport { addTodo } from \"../../redux/actions/todoActions\";\n\n//material-ui components\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\n//passing dispatch directly\nconst AddTodo = ({ dispatch }) => {\n  let input;\n\n  return (\n    <form\n      autoComplete=\"off\"\n      onSubmit={e => {\n        e.preventDefault();\n        if (!input.value.trim()) {\n          return;\n        }\n        dispatch(addTodo(input.value));\n        input.value = \"\";\n        input.style.height = \"auto\";\n      }}\n    >\n      <TextField\n        id=\"addTask\"\n        inputRef={node => (input = node)}\n        placeholder=\"Empty task\"\n        fullWidth\n        margin=\"normal\"\n        variant=\"outlined\"\n        autoFocus={true}\n        multiline={true}\n        spellCheck=\"false\"\n        InputLabelProps={{\n          shrink: true\n        }}\n      />\n\n      <Button\n        style={{ float: \"right\", marginTop: \"8px\" }}\n        variant=\"contained\"\n        size=\"medium\"\n        color=\"primary\"\n        type=\"submit\"\n      >\n        Add Task\n      </Button>\n    </form>\n  );\n};\n\nexport default connect()(AddTodo);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\n//constants\nimport {\n  SHOW_ALL_TODOS,\n  SHOW_COMPLETED_TODOS,\n  SHOW_ACTIVE_TODOS\n} from \"../../redux/constants/constants\";\n\n//action creator\nimport { filterTodos } from \"../../redux/actions/todoActions\";\n\n//material-ui components\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst FilterTodos = props => {\n  //material-ui menu\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  //material-ui event handler\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  //material-ui close menu\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  //dispatch filter action and close menu\n  function handleChange(state) {\n    props.filterTodos(state);\n    handleClose();\n  }\n\n  return (\n    <div>\n      <Button\n        aria-owns={open ? \"fade-menu\" : undefined}\n        aria-haspopup=\"true\"\n        size=\"small\"\n        onClick={handleClick}\n      >\n        {props.todosFilter.split(\"_\").join(\" \")}\n      </Button>\n      <Menu\n        id=\"fade-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={() => handleChange(SHOW_ALL_TODOS)}>\n          All\n        </MenuItem>\n        <MenuItem onClick={() => handleChange(SHOW_ACTIVE_TODOS)}>\n          Active\n        </MenuItem>\n        <MenuItem onClick={() => handleChange(SHOW_COMPLETED_TODOS)}>\n          Completed\n        </MenuItem>\n      </Menu>\n    </div>\n  );\n};\n\n//return action creators\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      filterTodos\n    },\n    dispatch\n  );\n}\n\n//return data our component needs\nfunction mapStateToProps({ todosFilter }) {\n  return {\n    todosFilter\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FilterTodos);\n","import React from \"react\";\nimport Todos from \"./Todos/todos\";\nimport AddTodo from \"./Todos/addTodo\";\nimport FilterTodos from \"./Todos/filterTodos\";\n\n//material-ui grid\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles = {\n  container: {\n    maxWidth: 500,\n    margin: `50px auto`\n  }\n};\n\nconst App = () => {\n  return (\n    <div style={styles.container}>\n      <Grid container spacing={24}>\n        <Grid item xs={12}>\n          <FilterTodos />\n          <AddTodo />\n        </Grid>\n\n        <Grid item xs={12}>\n          <Todos />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default App;\n\n\n","import {SHOW_ALL_TODOS} from \"../constants/constants\";\n\nexport default {\n  todos: [],\n  todosFilter: SHOW_ALL_TODOS\n};\n","import { SET_FILTER_TODOS } from \"../constants/constants\";\nimport initalState from \"../store/initialState\";\n\nconst todoFilterReducer = (state = initalState.todosFilter, action) => {\n  switch (action.type) {\n    case SET_FILTER_TODOS:\n      return action.filter;\n    default:\n      return state;\n  }\n};\n\nexport default todoFilterReducer;\n","import { combineReducers } from \"redux\";\nimport todosReducer from \"./todoReducer\";\nimport todosFilterReducer from \"./todoFilterReducer\";\n\n//key names will used on our components\nconst rootReducer = combineReducers({\n  todos: todosReducer,\n  todosFilter: todosFilterReducer\n});\n\nexport default rootReducer;\n","// constant types\nimport {\n  ADD_TODO,\n  UPDATE_TODO,\n  DELETE_TODO,\n  TOGGLE_DONE_TODO\n} from \"../constants/constants\";\n\n// initial state\nimport initalState from \"../store/initialState\";\n\n// todoReducer\nexport default function(state = initalState.todos, action) {\n  // deconstructing action object\n  const { payload } = action;\n\n  // checking action type\n  switch (action.type) {\n    // add_todo reducer\n    case ADD_TODO:\n      return [\n        ...state,\n        {\n          id: payload.id,\n          completed: false,\n          content: payload.content\n        }\n      ];\n\n    // update_todo reducer\n    case UPDATE_TODO:\n      return state.map(todo => {\n        return todo.id === action.payload.id\n          ? { ...todo, content: payload.content }\n          : todo;\n      });\n\n    // delete_todo reducer\n    case DELETE_TODO:\n      return state.filter(todo => todo.id !== payload.id);\n\n    // toggle_todo reducer\n    case TOGGLE_DONE_TODO:\n      return state.map(todo => {\n        return todo.id === payload.id\n          ? { ...todo, completed: !todo.completed }\n          : todo;\n      });\n\n    // default state\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./components/App\";\nimport configureStore from \"./redux/store\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers\";\nimport initialState from \"./initialState\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nexport default () => {\n  return createStore(rootReducer, initialState, composeWithDevTools());\n};\n"],"sourceRoot":""}